apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    certified: 'false'
    olm.targetNamespaces: ''
    operatorframework.io/properties: >-
      {"properties":[{"type":"olm.gvk","value":{"group":"core.strimzi.io","kind":"StrimziPodSet","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"Kafka","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaBridge","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaConnect","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaConnector","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaMirrorMaker","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaMirrorMaker2","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaRebalance","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaTopic","version":"v1beta2"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"kafka.strimzi.io","kind":"KafkaUser","version":"v1beta2"}},{"type":"olm.package","value":{"packageName":"strimzi-kafka-operator","version":"0.32.0"}}]}
    alm-examples-metadata: |-
      {
        "my-cluster": {
          "description": "Example Kafka cluster with Ephemeral storage"
        },
        "my-connect-cluster": {
          "description": "Example Kafka Connect cluster"
        },
        "my-mirror-maker": {
          "description": "Example Kafka Mirror Maker 1 deployment"
        },
        "my-mm2-cluster": {
          "description": "Example Kafka Mirror Maker 2 deployment"
        },
        "my-bridge": {
          "description": "Example Strimzi Kafka HTTP Bridge deployment"
        },
        "my-topic": {
          "description": "Example KafkaTopic custom resource"
        },
        "my-user": {
          "description": "Example KafkaUser custom resource"
        },
        "my-source-connector": {
          "description": "Example Kafka Connect source connector"
        },
        "my-rebalance": {
          "description": "Example Cruise Control rebalance request"
        }
      }
    repository: 'https://github.com/strimzi/strimzi-kafka-operator'
    support: Strimzi
    operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy", "proxy-aware"]'
    alm-examples: |-
      [
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"Kafka",
          "metadata":{
            "name":"my-cluster"
          },
          "spec":{
            "kafka":{
                "version":"3.3.1",
                "replicas":3,
                "listeners": [
                  {
                    "name": "plain",
                    "port": 9092,
                    "type": "internal",
                    "tls": false
                  },
                  {
                    "name": "tls",
                    "port": 9093,
                    "type": "internal",
                    "tls": true
                  }
                ],
                "config":{
                  "offsets.topic.replication.factor":3,
                  "transaction.state.log.replication.factor":3,
                  "transaction.state.log.min.isr":2,
                  "default.replication.factor":3,
                  "min.insync.replicas":2,
                  "inter.broker.protocol.version":"3.3"
                },
                "storage":{
                  "type":"ephemeral"
                }
            },
            "zookeeper":{
                "replicas":3,
                "storage":{
                  "type":"ephemeral"
                }
            },
            "entityOperator":{
                "topicOperator":{
                  },
                "userOperator":{
                  }
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaConnect",
          "metadata":{
            "name":"my-connect-cluster"
          },
          "spec":{
            "version":"3.3.1",
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
            "tls":{
                "trustedCertificates":[
                  {
                      "secretName":"my-cluster-cluster-ca-cert",
                      "certificate":"ca.crt"
                  }
                ]
            },
            "config": {
                "group.id": "connect-cluster",
                "offset.storage.topic": "connect-cluster-offsets",
                "config.storage.topic": "connect-cluster-configs",
                "status.storage.topic": "connect-cluster-status",
                "config.storage.replication.factor": -1,
                "offset.storage.replication.factor": -1,
                "status.storage.replication.factor": -1
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaMirrorMaker",
          "metadata":{
            "name":"my-mirror-maker"
          },
          "spec":{
            "version":"3.3.1",
            "replicas":1,
            "consumer":{
                "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                "groupId":"my-source-group-id"
            },
            "producer":{
                "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
            },
            "include":".*"
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaBridge",
          "metadata":{
            "name":"my-bridge"
          },
          "spec":{
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
            "http":{
                "port":8080
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaTopic",
          "metadata":{
            "name":"my-topic",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "partitions":10,
            "replicas":3,
            "config":{
                "retention.ms":604800000,
                "segment.bytes":1073741824
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta2",
          "kind":"KafkaUser",
          "metadata":{
            "name":"my-user",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "authentication":{
                "type":"tls"
            },
            "authorization":{
                "type":"simple",
                "acls":[
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"group",
                        "name":"my-group",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Write",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Create",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  }
                ]
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaConnector",
          "metadata": {
            "name": "my-source-connector",
            "labels": {
              "strimzi.io/cluster": "my-connect-cluster"
            }
          },
          "spec": {
            "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
            "tasksMax": 1,
            "config": {
              "file": "/opt/kafka/LICENSE",
              "topic": "my-topic"
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaMirrorMaker2",
          "metadata": {
            "name": "my-mm2-cluster"
          },
          "spec": {
            "version":"3.3.1",
            "replicas": 1,
            "connectCluster": "my-cluster-target",
            "clusters": [
              {
                "alias": "my-cluster-source",
                "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
              },
              {
                "alias": "my-cluster-target",
                "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                "config": {
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
                }
              }
            ],
            "mirrors": [
              {
                "sourceCluster": "my-cluster-source",
                "targetCluster": "my-cluster-target",
                "sourceConnector": {
                  "config": {
                    "replication.factor": 1,
                    "offset-syncs.topic.replication.factor": 1,
                    "sync.topic.acls.enabled": "false"
                  }
                },
                "heartbeatConnector": {
                  "config": {
                    "heartbeats.topic.replication.factor": 1
                  }
                },
                "checkpointConnector": {
                  "config": {
                    "checkpoints.topic.replication.factor": 1
                  }
                },
                "topicsPattern": ".*",
                "groupsPattern": ".*"
              }
            ]
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "KafkaRebalance",
          "metadata": {
            "name": "my-rebalance",
            "labels": {
              "strimzi.io/cluster": "my-cluster"
            }
          },
          "spec": {
            "goals": [
              "CpuCapacityGoal",
              "NetworkInboundCapacityGoal",
              "DiskCapacityGoal",
              "RackAwareGoal",
              "MinTopicLeadersPerBrokerGoal",
              "NetworkOutboundCapacityGoal",
              "ReplicaCapacityGoal"
            ]
          }
        },
        {
          "apiVersion": "core.strimzi.io/v1beta2",
          "kind": "StrimziPodSet",
          "metadata": {
            "name": "strimzi-pod-set-example"
          },
          "spec": {
            "pods": [
              {
                "apiVersion": "v1",
                "kind": "Pod",
                "metadata": {
                  "labels": {
                    "app": "strimzi-pod-set-example"
                  },
                  "name": "example-pod"
                },
                "spec": {
                  "containers": [
                    {
                      "command": [
                        "sleep",
                        3600
                      ],
                      "image": "busybox:latest",
                      "imagePullPolicy": "IfNotPresent",
                      "name": "busybox"
                    }
                  ]
                }
              }
            ],
            "selector": {
              "matchLabels": {
                "app": "strimzi-pod-set-example"
              }
            }
          }
        }
      ]
    capabilities: Deep Insights
    olm.operatorNamespace: openshift-operators
    containerImage: >-
      quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
    operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
    createdAt: '2022-10-31 17:05:00'
    categories: Streaming & Messaging
    description: >-
      Strimzi provides a way to run an Apache Kafka cluster on Kubernetes or
      OpenShift in various deployment configurations.
    olm.operatorGroup: global-operators
  resourceVersion: '40655'
  name: strimzi-cluster-operator.v0.32.0
  generation: 1
  managedFields:
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:operators.operatorframework.io/internal-objects': {}
            'f:operators.openshift.io/infrastructure-features': {}
            'f:createdAt': {}
            'f:alm-examples': {}
            'f:description': {}
            'f:capabilities': {}
            .: {}
            'f:containerImage': {}
            'f:categories': {}
            'f:certified': {}
            'f:alm-examples-metadata': {}
            'f:operatorframework.io/properties': {}
            'f:support': {}
            'f:repository': {}
          'f:labels':
            .: {}
            'f:operatorframework.io/arch.amd64': {}
            'f:operatorframework.io/arch.arm64': {}
            'f:operatorframework.io/arch.s390x': {}
            'f:operatorframework.io/os.linux': {}
        'f:spec':
          'f:version': {}
          'f:maturity': {}
          'f:provider':
            .: {}
            'f:name': {}
          'f:links': {}
          'f:install':
            .: {}
            'f:spec':
              .: {}
              'f:clusterPermissions': {}
              'f:deployments': {}
              'f:permissions': {}
            'f:strategy': {}
          'f:maintainers': {}
          'f:description': {}
          'f:installModes': {}
          'f:minKubeVersion': {}
          'f:icon': {}
          'f:customresourcedefinitions':
            .: {}
            'f:owned': {}
          .: {}
          'f:relatedImages': {}
          'f:cleanup':
            .: {}
            'f:enabled': {}
          'f:apiservicedefinitions': {}
          'f:selector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:name': {}
          'f:replaces': {}
          'f:labels':
            .: {}
            'f:name': {}
          'f:displayName': {}
          'f:keywords': {}
      manager: catalog
      operation: Update
      time: '2022-11-12T22:00:58Z'
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:olm.operatorGroup': {}
            'f:olm.operatorNamespace': {}
            'f:olm.targetNamespaces': {}
          'f:labels':
            'f:operators.coreos.com/strimzi-kafka-operator.openshift-operators': {}
      manager: olm
      operation: Update
      time: '2022-11-12T22:00:58Z'
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:lastUpdateTime': {}
          'f:requirementStatus': {}
          'f:phase': {}
          'f:lastTransitionTime': {}
          'f:conditions': {}
          .: {}
          'f:cleanup': {}
          'f:message': {}
          'f:reason': {}
      manager: olm
      operation: Update
      subresource: status
      time: '2022-11-12T22:00:58Z'
  namespace: openshift-operators
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/arch.s390x: supported
    operatorframework.io/os.linux: supported
    operators.coreos.com/strimzi-kafka-operator.openshift-operators: ''
spec:
  customresourcedefinitions:
    owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
          - kind: Route
            name: ''
            version: route.openshift.io/v1
          - kind: Service
            name: ''
            version: v1
          - kind: StatefulSet
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
          - kind: Secret
            name: ''
            version: v1
        specDescriptors:
          - description: Kafka version
            displayName: Version
            path: kafka.version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The desired number of Kafka brokers.
            displayName: Kafka Brokers
            path: kafka.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The type of storage used by Kafka brokers
            displayName: Kafka storage
            path: kafka.storage.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:ephemeral'
              - 'urn:alm:descriptor:com.tectonic.ui:select:persistent-claim'
              - 'urn:alm:descriptor:com.tectonic.ui:select:jbod'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Kafka Resource Requirements
            path: kafka.resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - description: The desired number of Zookeeper nodes.
            displayName: Zookeeper Nodes
            path: zookeeper.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The type of storage used by Zookeeper nodes
            displayName: Zookeeper storage
            path: zookeeper.storage.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:ephemeral'
              - 'urn:alm:descriptor:com.tectonic.ui:select:persistent-claim'
              - 'urn:alm:descriptor:com.tectonic.ui:select:jbod'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Zookeeper Resource Requirements
            path: zookeeper.resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka cluster conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
          - kind: Service
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka Connect nodes.
            displayName: Connect nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka Connect version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The address of the bootstrap server
            displayName: Bootstrap server
            path: bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka Connect conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka MirrorMaker nodes.
            displayName: MirrorMaker nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka Mirror Maker version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The bootstrap address of the Source cluster
            displayName: Source cluster
            path: consumer.bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The bootstrap address of the Target cluster
            displayName: Target cluster
            path: producer.bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Expression specifying the topics which should be mirrored
            displayName: Mirrored topics
            path: include
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka MirrorMaker conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
          - kind: Service
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka Bridge nodes.
            displayName: Bridge nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: The bootstrap address of the Kafka cluster
            displayName: Kafka cluster
            path: bootstrapServers
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The port where the HTTP Bridge is listening
            displayName: HTTP port
            path: http.port
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:number'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka Bridge conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
          - description: The number of partitions
            displayName: Partitions
            path: partitions
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The number of replicas
            displayName: Replication factor
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
        statusDescriptors:
          - description: Kafka topic conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
          - kind: Secret
            name: ''
            version: v1
        specDescriptors:
          - description: Authentication type
            displayName: Authentication type
            path: authentication.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:tls'
              - 'urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512'
          - description: Authorization type
            displayName: Authorization type
            path: authorization.type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:select:simple'
        statusDescriptors:
          - description: Kafka user conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
          - description: Class of the Kafka Connect connector
            displayName: Class
            path: class
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Maximum number of tasks used by the connector
            displayName: Max number of tasks
            path: tasksMax
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
        statusDescriptors:
          - description: Connector conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
          - kind: Deployment
            name: ''
            version: v1
          - kind: ReplicaSet
            name: ''
            version: v1
          - kind: Pod
            name: ''
            version: v1
        specDescriptors:
          - description: The desired number of Kafka MirrorMaker 2 nodes.
            displayName: MirrorMaker2 nodes
            path: replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Kafka MirrorMaker 2 version
            displayName: Version
            path: version
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: The Kafka cluster where the underlying Kafka Connect connects
            displayName: Connect cluster
            path: connectCluster
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              Limits describes the minimum/maximum amount of compute resources
              required/allowed
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Kafka MirrorMaker conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
          - description: Skip hard Cruise Cotnrol goals
            displayName: Skip hard goals
            path: skipHardGoalCheck
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
        statusDescriptors:
          - description: Kafka Rebalance conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
          - description: Selector used to match pods managed by this resource
            displayName: Pod Selector
            path: selector
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod'
        statusDescriptors:
          - description: Number of desired pods
            displayName: Pods
            path: pods
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Number of pods which are ready
            displayName: Ready Pods
            path: readyPods
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
          - description: Number of pods which are up-to-date
            displayName: Up-to-date Pods
            path: currentPods
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
        version: v1beta2
  relatedImages:
    - image: >-
        quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
      name: strimzi-cluster-operator
    - image: >-
        quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0
      name: strimzi-kafka-320
    - image: >-
        quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0
      name: strimzi-kafka-321
    - image: >-
        quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef
      name: strimzi-kafka-323
    - image: >-
        quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
      name: strimzi-kafka-331
    - image: >-
        quay.io/strimzi/kafka-bridge@sha256:aad0cee4381cc1c8c6638ab5732b135acd271b5889486ca9a33312cce67e4a02
      name: strimzi-bridge
    - image: >-
        quay.io/strimzi/jmxtrans@sha256:208928133b2854f60bb34912e07561a3511de895b815960e73d565be2d553918
      name: strimzi-jmxtrans
    - image: >-
        quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
      name: strimzi-kaniko-executor
    - image: >-
        quay.io/strimzi/maven-builder@sha256:593e9980b786ca8ad3223151c3e17f16c7652ee0e86d722af4c34b023038ecc2
      name: strimzi-maven-builder
  cleanup:
    enabled: false
  apiservicedefinitions: {}
  keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
  displayName: Strimzi
  provider:
    name: Strimzi
  maturity: stable
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  version: 0.32.0
  icon:
    - base64data: >-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==
      mediatype: image/svg+xml
  minKubeVersion: 1.19.0
  links:
    - name: Website
      url: 'https://strimzi.io/'
    - name: Documentation
      url: 'https://strimzi.io/documentation/'
    - name: Mailing list
      url: 'https://lists.cncf.io/g/cncf-strimzi-users/topics'
    - name: Slack
      url: 'https://cloud-native.slack.com/messages/strimzi'
    - name: GitHub
      url: 'https://github.com/strimzi/strimzi-kafka-operator'
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - nodes
              verbs:
                - get
                - list
          serviceAccountName: strimzi-cluster-operator
      deployments:
        - name: strimzi-cluster-operator-v0.32.0
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: strimzi-cluster-operator
                strimzi.io/kind: cluster-operator
            strategy:
              type: Recreate
            template:
              metadata:
                creationTimestamp: null
                labels:
                  name: strimzi-cluster-operator
                  strimzi.io/kind: cluster-operator
              spec:
                containers:
                  - resources: {}
                    readinessProbe:
                      httpGet:
                        path: /ready
                        port: http
                      initialDelaySeconds: 10
                      periodSeconds: 30
                    name: strimzi-cluster-operator
                    livenessProbe:
                      httpGet:
                        path: /healthy
                        port: http
                      initialDelaySeconds: 10
                      periodSeconds: 30
                    env:
                      - name: STRIMZI_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                        value: '120000'
                      - name: STRIMZI_OPERATION_TIMEOUT_MS
                        value: '300000'
                      - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                        value: >-
                          quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
                        value: >-
                          quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
                        value: >-
                          quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_KAFKA_IMAGES
                        value: >
                          3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0

                          3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0

                          3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef

                          3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_KAFKA_CONNECT_IMAGES
                        value: >
                          3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0

                          3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0

                          3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef

                          3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                        value: >
                          3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0

                          3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0

                          3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef

                          3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
                        value: >
                          3.2.0=quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0

                          3.2.1=quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0

                          3.2.3=quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef

                          3.3.1=quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
                      - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                        value: >-
                          quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
                      - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                        value: >-
                          quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
                      - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                        value: >-
                          quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
                      - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                        value: >-
                          quay.io/strimzi/kafka-bridge@sha256:aad0cee4381cc1c8c6638ab5732b135acd271b5889486ca9a33312cce67e4a02
                      - name: STRIMZI_DEFAULT_JMXTRANS_IMAGE
                        value: >-
                          quay.io/strimzi/jmxtrans@sha256:208928133b2854f60bb34912e07561a3511de895b815960e73d565be2d553918
                      - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
                        value: >-
                          quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
                      - name: STRIMZI_DEFAULT_MAVEN_BUILDER
                        value: >-
                          quay.io/strimzi/maven-builder@sha256:593e9980b786ca8ad3223151c3e17f16c7652ee0e86d722af4c34b023038ecc2
                      - name: STRIMZI_OPERATOR_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: STRIMZI_FEATURE_GATES
                      - name: STRIMZI_LEADER_ELECTION_ENABLED
                        value: 'true'
                      - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
                        value: strimzi-cluster-operator
                      - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: STRIMZI_LEADER_ELECTION_IDENTITY
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    ports:
                      - containerPort: 8080
                        name: http
                        protocol: TCP
                    volumeMounts:
                      - mountPath: /tmp
                        name: strimzi-tmp
                      - mountPath: /opt/strimzi/custom-config/
                        name: co-config-volume
                    image: >-
                      quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
                    args:
                      - /opt/strimzi/bin/cluster_operator_run.sh
                serviceAccountName: strimzi-cluster-operator
                volumes:
                  - emptyDir:
                      medium: Memory
                    name: strimzi-tmp
                  - configMap:
                      name: strimzi-cluster-operator
                    name: co-config-volume
      permissions:
        - rules:
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - roles
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - ''
              resources:
                - pods
                - serviceaccounts
                - configmaps
                - services
                - endpoints
                - secrets
                - persistentvolumeclaims
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - kafka.strimzi.io
              resources:
                - kafkas
                - kafkas/status
                - kafkaconnects
                - kafkaconnects/status
                - kafkaconnectors
                - kafkaconnectors/status
                - kafkamirrormakers
                - kafkamirrormakers/status
                - kafkabridges
                - kafkabridges/status
                - kafkamirrormaker2s
                - kafkamirrormaker2s/status
                - kafkarebalances
                - kafkarebalances/status
                - kafkatopics
                - kafkatopics/status
                - kafkausers
                - kafkausers/status
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - core.strimzi.io
              resources:
                - strimzipodsets
                - strimzipodsets/status
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - apps
              resources:
                - deployments
                - deployments/scale
                - deployments/status
                - statefulsets
                - replicasets
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - ''
                - events.k8s.io
              resources:
                - events
              verbs:
                - create
            - apiGroups:
                - build.openshift.io
              resources:
                - buildconfigs
                - buildconfigs/instantiate
                - builds
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - networking.k8s.io
              resources:
                - networkpolicies
                - ingresses
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - create
            - apiGroups:
                - coordination.k8s.io
              resourceNames:
                - strimzi-cluster-operator
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - delete
                - patch
                - update
          serviceAccountName: strimzi-cluster-operator
    strategy: deployment
  maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
  description: >
    Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
    cluster on  [Kubernetes](https://kubernetes.io/) or
    [OpenShift](https://www.openshift.com/) in various deployment
    configurations. See our [website](https://strimzi.io) for more details about
    the project.


    **From the 0.32.0 release, Strimzi supports only Kubernetes 1.19 and newer!
    Kubernetes 1.16, 1.17 and 1.18 are not supported anymore.**

    ### Upgrades

    **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not
    supported anymore!**  You have to upgrade first to one of the previous
    versions of Strimzi.  You will also need to convert the CRD resources.  For
    more details, see the
    [documentation](https://strimzi.io/docs/operators/0.32.0/deploying.html#assembly-upgrade-str).

    ### New in 0.32.0

    * Add support for Kafka 3.3.1 and remove support for Kafka 3.1.0, 3.1.1, and
    3.1.2

    * Update KafkaConnector CR status so the 'NotReady' condition is added if
    the connector or any tasks are reporting a 'FAILED' state.

    * Add auto-approval mechanism on KafkaRebalance resource when an
    optimization proposal is ready

    * The ControlPlaneListener feature gate moves to GA

    * Add client rack-awareness support to Strimzi Bridge pods

    * Add support for OpenTelemetry for distributed tracing

    * ZookeeperRoller considers unready pods

    * Support multiple operations per ACLRule

    * Add new listener type "cluster-ip" which is using per-broker services
    instead of the pod DNS names

    * Update Strimzi OAuth library to 0.11.0

    ### Supported Features

    * **Manages the Kafka Cluster** - Deploys and manages all of the components
    of this complex application, including dependencies like Apache ZooKeeper®
    that are traditionally hard to administer.

    * **Includes Kafka Connect** - Allows for configuration of common data
    sources and sinks to move data into and out of the Kafka cluster.

    * **Topic Management** - Creates and manages Kafka Topics within the
    cluster.

    * **User Management** - Creates and manages Kafka Users within the cluster.

    * **Connector Management** - Creates and manages Kafka Connect connectors.

    * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data
    between different Apache Kafka® clusters.

    * **Includes HTTP Kafka Bridge** - Allows clients to send and receive
    messages through an Apache Kafka® cluster via HTTP protocol.

    * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing
    partition replicas according to specified goals in order to achieve the best
    cluster performance.

    * **Monitoring** - Built-in support for monitoring using Prometheus and
    provided Grafana dashboards

    ### Upgrading your Clusters

    The Strimzi Operator understands how to run and upgrade between a set of
    Kafka versions. When specifying a new version in your config, check to make
    sure you aren't using any features that may have been removed. See [the
    upgrade
    guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
    for more information.

    ### Storage

    An efficient data storage infrastructure is essential to the optimal
    performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires
    block storage. The use of file storage (for example, NFS) is not
    recommended.

    The Strimzi Operator supports three types of data storage:

    * Ephemeral (Recommended for development only!)

    * Persistent

    * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in
    Zookeeper.)

    Strimzi also supports advanced operations such as adding or removing disks
    in Apache Kafka® brokers or resizing the persistent volumes (where supported
    by the infrastructure).

    ### Documentation

    Documentation to the current _main_ branch as well as all releases can be
    found on our [website](https://strimzi.io/documentation).

    ### Getting help

    If you encounter any issues while using Strimzi, you can get help using:

    * [Strimzi mailing list on
    CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)

    * [Strimzi Slack channel on CNCF
    workspace](https://cloud-native.slack.com/messages/strimzi)

    ### Contributing

    You can contribute by:

    * Raising any issues you find using Strimzi

    * Fixing issues by opening Pull Requests

    * Improving documentation

    * Talking about Strimzi

    All bugs, tasks or enhancements are tracked as [GitHub
    issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues
    which  might be a good start for new contributors are marked with
    ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
    label.

    The [Development
    guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md)
    describes how to build Strimzi and how to  test your changes before
    submitting a patch or opening a PR.

    The [Documentation Contributor
    Guide](https://strimzi.io/contributing/guide/) describes how to contribute
    to Strimzi documentation.

    If you want to get in touch with us first before contributing, you can use:

    * [Strimzi mailing list on
    CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)

    * [Strimzi Slack channel on CNCF
    workspace](https://cloud-native.slack.com/messages/strimzi)

    ### License

    Strimzi is licensed under the [Apache License, Version
    2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
  replaces: strimzi-cluster-operator.v0.31.1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
  labels:
    name: strimzi-cluster-operator
